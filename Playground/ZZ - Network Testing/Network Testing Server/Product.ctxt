#BlueJ class context
comment0.params=
comment0.target=Product()
comment1.params=s\ d\ p\ i\ t\ n
comment1.target=Product(int,\ java.lang.String,\ double,\ boolean,\ int,\ int)
comment1.text=\n\ Constructor\ for\ the\ product\n\ @param\ s\ skuNumber\n\ @param\ d\ description\n\ @param\ p\ price\n\ @param\ i\ if\ taxable\n\ @param\ t\ tax\ rate\n\ @param\ n\ number\ of\ purchased\ items\n
comment10.params=input
comment10.target=void\ setTaxRate(int)
comment10.text=\n\ Sets\ the\ value\ of\ taxRate\n\ \n\ @param\ input\ for\ taxRate\n
comment11.params=input
comment11.target=void\ setItemDescription(java.lang.String)
comment11.text=\n\ Sets\ the\ value\ of\ itemDescription\n\ \n\ @param\ input\ for\ itemDescription\n
comment12.params=input
comment12.target=void\ setItemPrice(double)
comment12.text=\n\ Sets\ the\ value\ of\ itemPrice\n\ \n\ @param\ input\ for\ itemPrice\n
comment13.params=input
comment13.target=void\ setIsTaxable(boolean)
comment13.text=\n\ Sets\ the\ value\ of\ isTaxable\n\ \n\ @param\ input\ for\ isTaxable\n
comment14.params=otherProduct
comment14.target=boolean\ equals(Product)
comment14.text=\n\ Gives\ true\ if\ the\ two\ objects\ are\ equal\n\ \n\ @param\ otherProduct\ to\ test\ for\ equality\n\ @return\ e\ for\ equality\ test\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\n\ Converts\ information\ to\ a\ string\ value\n\ \n\ @return\ all\ of\ the\ product\ variable\ information\n
comment16.params=
comment16.target=double\ getTaxFreePrice()
comment16.text=\n\ Gives\ the\ cost\ of\ items\ purchased,\ without\ tax\n\ \n\ @return\ numOfProducts\ *\ itemPrice\n
comment17.params=
comment17.target=double\ getOnlyTax()
comment17.text=\n\ Gives\ only\ the\ cost\ of\ tax\ on\ the\ items\n\ \n\ @param\ t\ the\ tax\ rate\ of\ item\n\ @return\ numOfProducts\ *\ itemPrice\ *\ taxRate\n
comment18.params=
comment18.target=double\ getTotalPrice()
comment18.text=\n\ Gives\ the\ total\ cost\ of\ items,\ including\ tax\n\ \n\ @param\ t\ the\ tax\ rate\ of\ item\n\ @return\ numOfProducts\ *\ itemPrice\ *\ (1\ +\ taxRate)\n
comment19.params=t
comment19.target=double\ calculateTaxRate(boolean)
comment19.text=\n\ Calculates\ tax\ rate\n\ \n\ @param\ t\ checks\ if\ the\ item\ is\ taxable\n\ \n\ @returns\ taxRate\n
comment2.params=
comment2.target=int\ getSkuNumber()
comment2.text=\n\ Gets\ the\ value\ of\ skuNumber\n\ \n\ @return\ skuNumber\n
comment3.params=
comment3.target=int\ getNumOfProducts()
comment3.text=\n\ Gets\ the\ value\ of\ numOfProducts\n\ \n\ @return\ numOfProducts\n
comment4.params=
comment4.target=int\ getTaxRate()
comment4.text=\n\ Gets\ the\ value\ of\ taxRate\n\ \n\ @return\ taxRate\n
comment5.params=
comment5.target=java.lang.String\ getItemDescription()
comment5.text=\n\ Gets\ the\ value\ of\ itemDescription\n\ \n\ @return\ itemDescription\n
comment6.params=
comment6.target=double\ getItemPrice()
comment6.text=\n\ Gets\ the\ value\ of\ itemPrice\n\ \n\ @return\ itemPrice\n
comment7.params=
comment7.target=boolean\ getIsTaxable()
comment7.text=\n\ Gets\ the\ value\ of\ isTaxable\n\ \n\ @return\ isTaxable\n
comment8.params=input
comment8.target=void\ setSkuNumber(int)
comment8.text=\n\ Sets\ the\ value\ of\ skuNumber\n\ \n\ @param\ input\ for\ skuNumber\n
comment9.params=input
comment9.target=void\ setNumOfProducts(int)
comment9.text=\n\ Sets\ the\ value\ of\ numOfProducts\n\ \n\ @param\ input\ for\ numOfProducts\n
numComments=20
